name: Verify GraphQL Schema
description: Verify GraphQL Schema

inputs:
  oldSchemaFile:
    description: 'Current schema file to validate against.'
    required: true
  newSchemaFile:
    description: 'New schema file to be validated.'
    required: true
  allowBreakingChanges:
    description: 'Whether to allow breaking changes in new schema'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Check new schema presence
      id: new_schema_presence
      uses: andstor/file-existence-action@v3
      with:
        files: ${{ inputs.newSchemaFile }}

    - name: Fail with missing new schema
      if: steps.new_schema_presence.outputs.files_exists == 'false'
      shell: bash
      run: exit 1

    - name: Check old schema presence
      id: old_schema_presence
      uses: andstor/file-existence-action@v3
      with:
        files: ${{ inputs.oldSchemaFile }}

    - name: Check old schema is changed in PR
      id: old_schema_touched
      if: steps.old_schema_presence.outputs.files_exists == 'true'
      uses: tj-actions/changed-files@v44
      with:
        files: |
          ${{ inputs.oldSchemaFile }}

    - name: Fail if old schema was touched
      if: steps.old_schema_touched.outputs.any_changed == 'true'
      shell: bash
      run: exit 1

    - name: Show old schema
      if: steps.old_schema_presence.outputs.files_exists == 'true'
      shell: bash
      run: |
        echo ::group::Old schema
        cat ${{ inputs.oldSchemaFile }}
        echo ::endgroup::

    - name: Show new schema
      shell: bash
      run: |
        echo ::group::New schema
        cat ${{ inputs.newSchemaFile }}
        echo ::endgroup::

    - name: Compare schemas
      id: compare_schemas
      shell: bash
      run: echo "changed=$(cmp -s ${{ inputs.oldSchemaFile }} ${{ inputs.newSchemaFile }} && echo 0 || echo 1)" >> "$GITHUB_OUTPUT"

    - name: Validate schema
      id: validation
      if: ${{ steps.old_schema_presence.outputs.files_exists == 'true' && steps.compare_schemas.outputs.changed == '1' }}
      uses: mindbox-cloud/docker-run-action@v1
      with:
        image: kamilkisiela/graphql-inspector:latest
        options: |
          -v ${{ github.workspace }}:/w
          -v ${{ github.action_path }}/entrypoint.js:/w/entrypoint.js
        run: |
          /w/entrypoint.js /w/${{ inputs.oldSchemaFile }} /w/${{ inputs.newSchemaFile }} ${{ inputs.allowBreakingChanges }} /w/${{ inputs.oldSchemaFile }}.report.txt

    - name: Add comment with output to PR
      uses: mshick/add-pr-comment@v2
      if: ${{ !cancelled() && (steps.validation.conclusion == 'success' || steps.validation.conclusion == 'failure') }}
      with:
        message-path: |
          ${{ inputs.oldSchemaFile }}.report.txt
