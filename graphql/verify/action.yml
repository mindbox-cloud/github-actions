name: Verify GraphQL Schema
description: Verify GraphQL Schema

inputs:
  oldSchemaFile:
    description: 'Current schema file to validate against.'
    required: true
  newSchemaFile:
    description: 'New schema file to be validated.'
    required: true
  allowBreakingChanges:
    description: 'Whether to allow breaking changes in new schema'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Check new schema presence
      id: new_schema_presence
      uses: andstor/file-existence-action@v3
      with:
        files: ${{ inputs.newSchemaFile }}

    - name: Fail with missing new schema
      if: steps.new_schema_presence.outputs.files_exists == 'false'
      shell: bash
      run: exit 1

    - name: Checkout reference schema
      uses: actions/checkout@v4
      with:
        path: reference_graphql_schema
        ref: ${{ github.base_ref }}
        sparse-checkout: ${{ inputs.oldSchemaFile }}
        sparse-checkout-cone-mode: false

    - name: Check reference schema presence
      id: reference_schema_presence
      uses: andstor/file-existence-action@v3
      with:
        files: reference_graphql_schema/${{ inputs.oldSchemaFile }}

    - name: Show reference schema
      if: steps.reference_schema_presence.outputs.files_exists == 'true'
      shell: bash
      run: |
        echo ::group::Reference schema
        cat reference_graphql_schema/${{ inputs.oldSchemaFile }}
        echo ::endgroup::

    - name: Show new schema
      shell: bash
      run: |
        echo ::group::New schema
        cat ${{ inputs.newSchemaFile }}
        echo ::endgroup::

    - name: Compare schemas
      id: compare_schemas
      shell: bash
      run: echo "changed=$(cmp -s reference_graphql_schema/${{ inputs.oldSchemaFile }} ${{ inputs.newSchemaFile }} && echo 0 || echo 1)" >> "$GITHUB_OUTPUT"

    - name: Validate schema
      id: validation
      if: ${{ steps.reference_schema_presence.outputs.files_exists == 'true' && steps.compare_schemas.outputs.changed == '1' }}
      uses: mindbox-cloud/docker-run-action@v1
      with:
        image: kamilkisiela/graphql-inspector:latest
        options: |
          -v ${{ github.workspace }}/reference_graphql_schema/${{ inputs.oldSchemaFile }}:/w/${{ inputs.oldSchemaFile }}
          -v ${{ github.workspace }}/${{ inputs.newSchemaFile }}:/w/${{ inputs.newSchemaFile }}
          -v ${{ github.action_path }}/entrypoint.js:/w/entrypoint.js
        run: |
          cd /w/ && ./entrypoint.js ${{ inputs.oldSchemaFile }} ${{ inputs.newSchemaFile }} ${{ inputs.allowBreakingChanges }} ${{ inputs.oldSchemaFile }}.report.txt

    - name: Copy new schema to committed schema
      if: ${{ !cancelled() && (steps.validation.conclusion == 'skipped' || steps.validation.conclusion == 'failure') }}
      shell: bash
      run: cp -f ${{ inputs.newSchemaFile }} ${{ inputs.oldSchemaFile }}

    - name: Commit new schema
      if: ${{ !cancelled() && (steps.validation.conclusion == 'skipped' || steps.validation.conclusion == 'failure') }}
      uses: EndBug/add-and-commit@v9
      with:
        new_branch: ${{ github.head_ref }}
        add: ${{ inputs.oldSchemaFile }}
        message: Commit updated ${{ inputs.oldSchemaFile }}
        committer_name: GitHub Actions
        committer_email: actions@github.com

    - name: Add comment with output to PR
      uses: mshick/add-pr-comment@v2
      if: ${{ !cancelled() && (steps.validation.conclusion == 'success' || steps.validation.conclusion == 'failure') }}
      with:
        message-path: |
          ${{ inputs.oldSchemaFile }}.report.txt

    - name: Remove reference checkout
      if: ${{ always() }}
      shell: bash
      run: rm -rf reference
