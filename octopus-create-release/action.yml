name: 'Create Octopus Release'
description: 'Create Release for Octopus'
inputs:
  mode:
    description: 'Mode: check/release'
    required: false
    default: 'release'
  space:
    description: 'Space in Octopus'
    required: false
    default: 'Spaces-1'
  project:
    description: 'Project'
    required: true
  env:
    description: 'Project Env'
    required: false
  release-number:
    description: 'Release Number from GitHub'
    required: true
  octopus-server:
    description: 'Octopus Server'
    required: true
  octopus-api-key:
    description: 'Octopus Api Key'
    required: true
  # github-token:
  #   description: 'GitHub Token'
  #   required: true
  github-repository:
    description: 'GitHub Repository'
    required: true
  # github-sha:
  #   description: 'Current Commit'
  #   required: true
  additional_params_values:
    description: 'Additional Parameters and Values for Creating Release'
    required: false
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Get Latest Release
      id: latest_version
      uses: abatilo/release-info-action@v1.3.0
      with:
        owner: ${{ github.repository_owner }}
        repo: helmfile
    - name: Retrieve last release version
      run: |
        echo "::set-output name=VERSION::$(git ls-remote personal-remote --refs --sort="version:refname" | cut -d/ -f3- | tail -1)"
      id: last_version
      shell: bash

    - name: Create Release Notes File
      run: |
        $global:github_repository="${{ inputs.github-repository }}"
        $global:github_token="${{ github.token }}"
        $global:current_commitId="${{ github.sha }}"
        $global:last_release_version="${{ steps.latest_version.outputs.latest_tag }}"
        $global:release_version="${{ inputs.release-number }}"
        ${{ github.action_path }}/release-gen.ps1
      shell: pwsh

    - name: "Create ${{ inputs.project }} Octopus Release"
      if: ${{ inputs.mode == 'release' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.project }}"
          --version ${{ inputs.release-number }}
          --packageVersion ${{ inputs.release-number }}
          --channel Default
          --apikey ${{ inputs.octopus-api-key }}
          --releaseNoteFile releasenotes.txt

    - name: "Create ${{ inputs.project }} Octopus Helm Diff"
      if: ${{ inputs.mode == 'check' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.project }}"
          --apikey ${{ inputs.octopus-api-key }}
          --package "*:*:${{ inputs.release-number }}"
          --deployTo "${{ inputs.env }}"
          --waitForDeployment
          --version "${{ inputs.release-number }}"
          --cancelOnTimeout
          --deploymentTimeout "00:20:00"
          --releaseNoteFile releasenotes.txt 
          --progress
          ${{ inputs.additional_params_values }}