name: 'Create Release'
description: 'Create Release for Octopus'
inputs:
  mode:
    description: 'Mode: check/release'
    required: false
    default: 'release'
  space:
    description: 'Space in Octopus'
    required: false
    default: 'Spaces-1'
  matrix:
    description: 'List or Dictionary(with environment) of Projects for Release'
    required: true
  release-number:
    description: 'Release Number from GitHub'
    required: true
  octopus-server:
    description: 'Octopus Server'
    required: true
  octopus-api-key:
    description: 'Octopus Api Key'
    required: true
  github-token:
    description: 'GitHub Token'
    required: true
  github-repository:
    description: 'GitHub Repository'
    required: true
  github-sha:
    description: 'Current Commit'
    required: true
  additional_params_values:
    description: 'Additional Parameters and Values for Creating Release'
    required: false
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.9

    - name: Last release (check mode)
      if: ${{ inputs.mode == 'check' }}
      id: last_releases_octopus
      run: >
        echo "::set-output name=last_release_version::$(
        octo list-latestdeployments 
        --project='${{ inputs.matrix.project }}' 
        --environment=${{ inputs.matrix.env }} 
        --server=${{ inputs.octopus-server }} 
        --apiKey=${{ inputs.octopus-api-key }} --space=${{ inputs.space }} | 
        grep -o 'Version:.*' | awk '{ print $2 }')"
      shell: bash
    
    - name: Last release
      if: ${{ inputs.mode == 'release' }}
      id: last_releases_octopus
      run: >
        echo "::set-output name=last_release_version::$(
        octo list-latestdeployments 
        --project='${{ inputs.matrix.project }}' 
        --server=${{ inputs.octopus-server }} 
        --apiKey=${{ inputs.octopus-api-key }} --space=${{ inputs.space }} | 
        grep -o 'Version:.*' | awk '{ print $2 }')"
      shell: bash

    - name: Create Release Notes File
      run: |
        $global:github_repository="${{ inputs.github-repository }}"
        $global:github_token="${{ inputs.github-token }}"
        $global:current_commitId="${{ inputs.github-sha }}"
        $global:last_release_version="${{ steps.last_releases_octopus.outputs.last_release_version }}"
        $global:release_version="${{ inputs.release-number }}"
        ${{ github.action_path }}/release-gen.ps1
      shell: pwsh

    - name: "Create ${{ matrix.octopus-project }} Octopus Release"
      if: ${{ inputs.mode == 'release' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.matrix.octopus-project }}"
          --version ${{ inputs.release-number }}
          --packageVersion ${{ inputs.release-number }}
          --channel Default
          --apikey ${{ inputs.octopus-api-key }}
          --releaseNoteFile releasenotes.txt
      shell: bash

    - name: "Create ${{ matrix.project }} Octopus Helm Diff"
      if: ${{ inputs.mode == 'check' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.matrix.project }}"
          --apikey ${{ inputs.octopus-api-key }}
          --package "*:*:${{ inputs.release-number }}"
          --deployTo "${{ inputs.matrix.env }}"
          --waitForDeployment
          --version "${{ inputs.release-number }}"
          --cancelOnTimeout
          --deploymentTimeout "00:20:00"
          --releaseNoteFile releasenotes.txt 
          --progress
          ${{ inputs.additional_params_values }}
      shell: bash