name: 'Create Octopus Release'
description: 'Create Release for Octopus'
inputs:
  mode:
    description: 'Mode: check/release'
    required: false
    default: 'release'
  space:
    description: 'Space in Octopus'
    required: false
    default: 'Spaces-1'
  project:
    description: 'Project'
    required: true
  env:
    description: 'Project Env'
    required: false
  release-number:
    description: 'Release Number from GitHub'
    required: true
  octopus-server:
    description: 'Octopus Server Url'
    required: true
  octopus-api-key:
    description: 'Octopus Api Key'
    required: true
  additional_params_values:
    description: 'Additional Parameters and Values for Creating Release'
    required: false
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/download-artifact@master
      with:
        name: release-notes-artifact
        path: releasenotes.txt
        
    - name: Create Release Notes File
      if: hashFiles('releasenotes.txt') == ''
      run: |
        $global:github_repository="${{ github.repository }}"
        $global:github_token="${{ github.token }}"
        $global:current_commitId="${{ github.sha }}"
        $global:release_version="${{ inputs.release-number }}"
        ${{ github.action_path }}/release-gen.ps1
      shell: pwsh

    - name: "Create ${{ inputs.project }} Octopus Release"
      if: ${{ inputs.mode == 'release' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.project }}"
          --version ${{ inputs.release-number }}
          --packageVersion ${{ inputs.release-number }}
          --channel Default
          --apikey ${{ inputs.octopus-api-key }}
          --releaseNoteFile releasenotes.txt

    - name: "Create ${{ inputs.project }} Octopus Helm Diff"
      if: ${{ inputs.mode == 'check' }}
      uses: docker://octopusdeploy/octo
      with:
        args: >
          create-release
          --server ${{ inputs.octopus-server }}
          --project "${{ inputs.project }}"
          --apikey ${{ inputs.octopus-api-key }}
          --package "*:*:${{ inputs.release-number }}"
          --deployTo "${{ inputs.env }}"
          --waitForDeployment
          --version "${{ inputs.release-number }}"
          --cancelOnTimeout
          --deploymentTimeout "00:20:00"
          --releaseNoteFile releasenotes.txt 
          --progress
          ${{ inputs.additional_params_values }}