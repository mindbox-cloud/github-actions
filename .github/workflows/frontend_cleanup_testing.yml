name: Cleanup trigger after branch deleted

on:
  workflow_call:
    inputs:
      hot_testing:
        description: "True if need to cleanup hot-testing"
        default: false
        required: false
        type: boolean
      hot_testing_k8:
        type: boolean
        description: "True if need to use new deployment procedure"
        required: false
        default: false
      e2e_testing:
        description: "True if need to cleanup e2e"
        default: false
        required: false
        type: boolean
    secrets:
      frontend_gha_full_token:
        description: 'A FRONTEND_GHA_FULL_TOKEN token passed from the caller workflow'
        required: true
      kube_dev_config:
        description: 'A DEV_FRONTEND_GHA_KUBE_CONFIG_DATA token passed from the caller workflow'
        required: true
      container_registry_key:
        description: 'A CONTAINER_REGISTRY_KEY token passed from the caller workflow'
        required: true
      kube_dev_config_k8:
        description: 'A SA_TOKEN_DTLN_KUBE_CDP_STAGING_MICROFRONTENDS token passed from the caller workflow for new deploy'
        required: false

jobs:
  cleanup:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:

      - name: Checkout frontend-deploy repository
        uses: actions/checkout@v2
        with:
          repository: mindbox-moscow/frontend-deploy
          token: ${{ secrets.frontend_gha_full_token }}
          path: ./hot_build

      - name: Set variables
        run: |
          echo "ref_name=$(cat $GITHUB_EVENT_PATH | jq '.ref' | sed 's/refs\/heads\///g' | sed 's/\"//g' | sed 's/[_.\/#]/-/g' | sed 's/--/-/g' | tr '[A-Z]' '[a-z]')" >> $GITHUB_ENV
          echo "repository_name=$(cat $GITHUB_EVENT_PATH | jq '.repository.name' | sed 's/\"//g')" >> $GITHUB_ENV
        id: set_variables

      - name: Get branch and repo names hash
        run: echo "hash_payload=$(echo $BRANCH_AND_REPO | md5sum | sed 's/  -//g')"  >> $GITHUB_ENV
        id: branch_and_repo_hash
        env:
          BRANCH_AND_REPO: "${{ env.repository_name }}-${{ env.ref_name }}"

      - name: Install YC
        run: |
          sudo curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          sudo ln -s /home/runner/yandex-cloud/bin/yc /bin/yc

      - name: Create YC profile
        run: |
          yc config profile create cleaner
          echo '${{ secrets.container_registry_key }}' >> iam_key.json | yc config set service-account-key iam_key.json
          rm iam_key.json

      - name: Remove Hot-Testing Docker Image
        if: ${{ inputs.hot_testing }}
        run: |
          ./scripts/cleaner.sh $(yc iam create-token) ${{ env.ref_name }}
        working-directory: ./hot_build/hot-testing
        continue-on-error: true

      - name: Set variables in hot-testing deployment.yml
        if: ${{ inputs.hot_testing }}
        run: sed -i "s~HASH_PAYLOAD~$HASH_PAYLOAD~g" ./kubernetes/deploy.yml
        env:
          HASH_PAYLOAD: ${{ env.hash_payload }}
        working-directory: ./hot_build/hot-testing
        continue-on-error: true

      - name: Cleanup cluster from hot-testing
        if: ${{ inputs.hot_testing }}
        uses: wahyd4/kubectl-helm-action@master
        env:
            # Config file generated by this manual
            # https://cloud.yandex.ru/docs/managed-kubernetes/operations/create-static-conf
          KUBE_CONFIG_DATA: ${{ secrets.kube_dev_config }}
        with:
          args: kubectl delete -f ./hot_build/hot-testing/kubernetes/deploy.yml
        continue-on-error: true

# ---------------------- use_k8_deploy_process -------------------

      - name: Set variables in hot-testing deployment.yml
        if: ${{ inputs.hot_testing_k8 }}
        run: sed -i "s~HASH_PAYLOAD~$HASH_PAYLOAD~g" ./kubernetes/deploy-k8.yml
        env:
          HASH_PAYLOAD: ${{ env.hash_payload }}
        working-directory: ./hot_build/hot-testing
        continue-on-error: true

      - name: Cleanup cluster from hot-testing
        if: ${{ inputs.hot_testing_k8 }}
        uses: wahyd4/kubectl-helm-action@master
        env:
            # Config file generated by this manual
            # https://cloud.yandex.ru/docs/managed-kubernetes/operations/create-static-conf
          KUBE_CONFIG_DATA: ${{ secrets.kube_dev_config_k8 }}
        with:
          args: kubectl delete -f ./hot_build/hot-testing/kubernetes/deploy-k8.yml
        continue-on-error: true

# ---------------------- END use_k8_deploy_process -------------------


      - name: Remove E2E-Testing Docker Image
        if: ${{ inputs.e2e_testing }}
        run: |
          ./scripts/cleaner.sh $(yc iam create-token) ${{ env.ref_name }}
        working-directory: ./hot_build/e2e
        continue-on-error: true

      - name: Set variables in hot-testing deployment.yml
        if: ${{ inputs.e2e_testing }}
        run: sed -i "s~HASH_PAYLOAD~$HASH_PAYLOAD~g" ./kubernetes/deploy.yml
        env:
          HASH_PAYLOAD: ${{ env.hash_payload }}
        working-directory: ./hot_build/e2e
        continue-on-error: true

      - name: Cleanup cluster from hot-testing
        if: ${{ inputs.e2e_testing }}
        uses: wahyd4/kubectl-helm-action@master
        env:
            # Config file generated by this manual
            # https://cloud.yandex.ru/docs/managed-kubernetes/operations/create-static-conf
          KUBE_CONFIG_DATA: ${{ secrets.kube_dev_config }}
        with:
          args: kubectl delete -f ./hot_build/e2e/kubernetes/deploy.yml
        continue-on-error: true
