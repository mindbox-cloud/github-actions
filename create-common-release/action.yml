name: 'Create Release'
description: 'Create Release'
inputs:
  release-number:
    description: 'Release number'
    required: false
  prerelease:
    description: 'If prerelease - true, else release - false'
    required: false
    default: false
  projects:
    description: 'Octopus Projects'
    required: true
  octopus-server:
    description: 'Octopus Server Url. Better use secrets.OCTOPUS_SERVER, if exist'
    required: true
  octopus-api-key:
    description: 'Octopus Api Key. Better use secrets.OCTOPUS_API_KEY, if exist'
    required: true
  additional_params_values:
    description: 'Additional Parameters and Values for Creating Release'
    required: false
runs:
  using: "composite"
  steps:
    - name: "Checkout"
      uses: actions/checkout@master

    - name: generate release number
      if: ${{ inputs.prerelease == 'false' }}
      id: release-number
      uses: mindbox-moscow/gha-release-number@v1.0.1
      with:
        token: ${{ github.token }}

    - name: "Checkout"
      uses: actions/checkout@master

    - name: Create Release Notes File
      uses: Bullrich/generate-release-changelog@master
      id: Changelog
      env:
        REPO: ${{ github.repository }}

    - name: echo array
      run: echo ${{ inputs.projects }}
      shell: bash

    - name: echo changelog
      run: echo ${{ steps.Changelog.outputs.changelog }}
      shell: bash

    # - name: "Create GitHub Release"
    #   if: ${{ steps.checkTag.outputs.exists == 'false' }}
    #   id: create_release
    #   uses: actions/create-release@master
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     tag_name: ${{ inputs.release-number }}
    #     release_name: "Release ${{ inputs.release-number }}"
    #     body: |
    #         ${{ steps.Changelog.outputs.changelog }}
    #     draft: false
    #     prerelease: ${{ inputs.prerelease }}

#--deployTo "${{ matrix.env }}" 

    # - name: "Create ${{ inputs.project }} Octopus Release"
    #   uses: docker://octopusdeploy/octo
    #   with:
    #     args: >
    #       create-release
    #       --server ${{ inputs.octopus-server }}
    #       --project "${{ inputs.project }}"
    #       --apikey ${{ inputs.octopus-api-key }}
    #       --version "${{ inputs.prerelease && inputs.release-number || steps.release-number.outputs.release-number }}"
    #       --packageVersion "${{ inputs.prerelease && inputs.release-number || steps.release-number.outputs.release-number }}"
    #       --releaseNoteFile releasenotes.txt
    #       ${{ inputs.additional_params_values }}

    