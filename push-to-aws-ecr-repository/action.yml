name: 'Push to AWS ECR repository'
description: 'Push to AWS ECR repository'
inputs:
  awsAccessKey:
    description: ''
    required: true
  awsSecretKey: 
    description: ''
    required: true
  awsRegion: 
    description: ''
    required: true
  awsOrganizationId: 
    description: ''
    required: true
  repositoryName: 
    description: ''
    required: true
  localTag: 
    description: 'Tag of locally built image. Image with this tag must be pre-built.'
    required: true
  targetTag: 
    description: ''
    required: true
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.awsAccessKey }}
        aws-secret-access-key: ${{ inputs.awsSecretKey }}
        aws-region: ${{ inputs.awsRegion }}

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Prepare policy file
      uses: jacobtomlinson/gha-find-replace@v3
      working-directory: ${{ github.action_path }}
      with:
        find: "ORGANIZATION_ID"
        replace: ${{ inputs.awsOrganizationId }}
        include: "**"

    - name: Create AWS repositories if not exist
      shell: bash
      working-directory: ${{ github.action_path }}
      run: >
        aws ecr describe-repositories --repository-names ${{ inputs.repositoryName }} || {
        aws ecr create-repository --repository-name ${{ inputs.repositoryName }}
        && aws ecr set-repository-policy --repository-name ${{ inputs.repositoryName }} --policy-text file://ecr-policy.json; };
    
    - name: Tag docker images
      env:
        registry: ${{ steps.login-ecr.outputs.registry }}
      shell: bash
      run: |
        docker tag ${{ inputs.localTag }} ${{ env.registry }}/${{ inputs.repositoryName }}:${{ inputs.targetTag }}
    
    - name: Docker push
      env:
        registry: ${{ steps.login-ecr.outputs.registry }}
      shell: bash
      run: |
        docker push ${{ env.registry }}/${{ inputs.repositoryName }}:${{ inputs.targetTag }}
